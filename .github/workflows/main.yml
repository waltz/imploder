on: [push]
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        ports: ['5432:5432']
        env:
          POSTGRES_USER: test-a-bot
          POSTGRES_PASSWORD: toot
          POSTGRES_DATABASE: rubbish-heap

    steps:
      - name: Get Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install ffmpeg -y
          sudo apt-get install youtube-dl

      - name: Fetch Ruby Version
        id: ruby_version
        run: echo "::set-output name=RUBY_VERSION::$(cat .ruby-version)"

      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ steps.ruby_version.outputs.RUBY_VERSION }}

      - name: Fetch Node Version
        id: node_version
        run: echo "::set-output name=NODE_VERSION::$(cat .nvmrc)"

      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ steps.node_version.outputs.NODE_VERSION }}

      - name: Fetch Yarn Cache Directory
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Configure Yarn Cache
        uses: actions/cache@v1
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Node Packages
        run: yarn

      - name: Configure Ruby Cache
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install Ruby Packages
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Build and Test with Rake
        env:
          DATABASE_URL: postgres://test-a-bot:toot@localhost/rubbish-heap
          RAILS_ENV: test
        run: |
          bundle exec rails db:setup
          bundle exec rails test


      - name: Push to Heroku, Production
        if: github.ref == 'refs/heads/production'
        run: |
          heroku git:remote --app ${{ secrets.PRODUCTION_APP_NAME }}
          heroku maintenance:on --app ${{ secrets.PRODUCTION_APP_NAME }}
          git push --force heroku HEAD:main
          heroku run rails db:migrate
          heroku maintenance:off --app ${{ secrets.PRODUCTION_APP_NAME }}

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Deploy to Staging
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.STAGING_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_USER }}
